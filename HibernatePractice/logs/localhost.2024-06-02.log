02-Jun-2024 00:11:48.292 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 00:11:59.401 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:11:59.603 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:12:18.541 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:12:18.541 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [38]

35:         <h2 class="mb-4">Add Health Information</h2>
36:         <form:form action="addAndPredict" modelAttribute="PremiumEntity" >
37:             <div class="form-group row">
38:                 <form:label path="age" class="col-sm-2 col-form-label">Age:</form:label>
39:                 <div class="col-sm-4">
40:                     <form:input path="age" type="number" class="form-control" required="true"/>
41:                 </div>


Stacktrace:] with root cause
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:12:49.732 SEVERE [http-nio-8087-exec-8] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:12:49.733 SEVERE [http-nio-8087-exec-8] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [38]

35:         <h2 class="mb-4">Add Health Information</h2>
36:         <form:form action="addAndPredict" modelAttribute="PremiumEntity" >
37:             <div class="form-group row">
38:                 <form:label path="age" class="col-sm-2 col-form-label">Age:</form:label>
39:                 <div class="col-sm-4">
40:                     <form:input path="age" type="number" class="form-control" required="true"/>
41:                 </div>


Stacktrace:] with root cause
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:12:50.719 SEVERE [http-nio-8087-exec-9] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:12:50.719 SEVERE [http-nio-8087-exec-9] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [38]

35:         <h2 class="mb-4">Add Health Information</h2>
36:         <form:form action="addAndPredict" modelAttribute="PremiumEntity" >
37:             <div class="form-group row">
38:                 <form:label path="age" class="col-sm-2 col-form-label">Age:</form:label>
39:                 <div class="col-sm-4">
40:                     <form:input path="age" type="number" class="form-control" required="true"/>
41:                 </div>


Stacktrace:] with root cause
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:12:50.907 SEVERE [http-nio-8087-exec-10] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:12:50.907 SEVERE [http-nio-8087-exec-10] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [38]

35:         <h2 class="mb-4">Add Health Information</h2>
36:         <form:form action="addAndPredict" modelAttribute="PremiumEntity" >
37:             <div class="form-group row">
38:                 <form:label path="age" class="col-sm-2 col-form-label">Age:</form:label>
39:                 <div class="col-sm-4">
40:                     <form:input path="age" type="number" class="form-control" required="true"/>
41:                 </div>


Stacktrace:] with root cause
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:12:51.110 SEVERE [http-nio-8087-exec-1] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:12:51.111 SEVERE [http-nio-8087-exec-1] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [38]

35:         <h2 class="mb-4">Add Health Information</h2>
36:         <form:form action="addAndPredict" modelAttribute="PremiumEntity" >
37:             <div class="form-group row">
38:                 <form:label path="age" class="col-sm-2 col-form-label">Age:</form:label>
39:                 <div class="col-sm-4">
40:                     <form:input path="age" type="number" class="form-control" required="true"/>
41:                 </div>


Stacktrace:] with root cause
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:12:56.358 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 00:13:05.761 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:13:05.986 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:13:20.685 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:13:20.685 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [38]

35:         <h2 class="mb-4">Add Health Information</h2>
36:         <form:form action="addAndPredict" modelAttribute="PremiumEntity" >
37:             <div class="form-group row">
38:                 <form:label path="age" class="col-sm-2 col-form-label">Age:</form:label>
39:                 <div class="col-sm-4">
40:                     <form:input path="age" type="number" class="form-control" required="true"/>
41:                 </div>


Stacktrace:] with root cause
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:14:32.622 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 00:14:42.540 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:14:42.782 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:15:00.616 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:15:00.616 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [38]

35:         <h2 class="mb-4">Add Health Information</h2>
36:         <form:form action="addAndPredict" modelAttribute="PremiumEntity" >
37:             <div class="form-group row">
38:                 <form:label path="age" class="col-sm-2 col-form-label">Age:</form:label>
39:                 <div class="col-sm-4">
40:                     <form:input path="age" type="number" class="form-control" required="true"/>
41:                 </div>


Stacktrace:] with root cause
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntity' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:393)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:15:33.896 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 00:15:43.899 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:15:44.160 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:16:38.914 SEVERE [http-nio-8087-exec-8] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.RestClientException: No HttpMessageConverter for java.util.HashMap and content type "application/json"] with root cause
	org.springframework.web.client.RestClientException: No HttpMessageConverter for java.util.HashMap and content type "application/json"
		at org.springframework.web.client.RestTemplate$HttpEntityRequestCallback.doWithRequest(RestTemplate.java:1000)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:774)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:69)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:23:13.696 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 00:23:25.011 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:23:25.312 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:23:58.250 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.RestClientException: No HttpMessageConverter for com.nucleus.entity.PremiumEntity and content type "application/json"] with root cause
	org.springframework.web.client.RestClientException: No HttpMessageConverter for com.nucleus.entity.PremiumEntity and content type "application/json"
		at org.springframework.web.client.RestTemplate$HttpEntityRequestCallback.doWithRequest(RestTemplate.java:1000)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:774)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:25:47.264 INFO [Catalina-utility-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 00:25:49.988 INFO [Catalina-utility-1] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:25:50.053 INFO [Catalina-utility-1] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:26:01.537 INFO [Catalina-utility-2] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 00:26:04.576 INFO [Catalina-utility-2] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:26:04.627 INFO [Catalina-utility-2] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:26:07.672 SEVERE [Catalina-utility-2] org.apache.catalina.core.ApplicationContext.log Servlet.init() for servlet [spring] threw exception
	org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter': Cannot create inner bean 'org.springframework.http.converter.json.MappingJackson2HttpMessageConverter#0' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] while setting bean property 'messageConverters' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.http.converter.json.MappingJackson2HttpMessageConverter#0': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] from ClassLoader [ParallelWebappClassLoader
  context: HibernatePractice
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@1f36e637
]
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:389)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:127)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:428)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:173)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
		at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
		at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
		at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
		at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
		at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
		at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
		at javax.servlet.GenericServlet.init(GenericServlet.java:143)
		at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1106)
		at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1063)
		at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:960)
		at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4641)
		at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4948)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3581)
		at org.apache.catalina.startup.HostConfig.reload(HostConfig.java:1415)
		at org.apache.catalina.startup.HostConfig.checkResources(HostConfig.java:1390)
		at org.apache.catalina.startup.HostConfig.check(HostConfig.java:1620)
		at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:308)
		at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
		at org.apache.catalina.core.ContainerBase.backgroundProcess(ContainerBase.java:1098)
		at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1301)
		at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1305)
		at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1283)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
	Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.http.converter.json.MappingJackson2HttpMessageConverter#0': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] from ClassLoader [ParallelWebappClassLoader
  context: HibernatePractice
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@1f36e637
]
		at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
		... 44 more
	Caused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] from ClassLoader [ParallelWebappClassLoader
  context: HibernatePractice
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@1f36e637
]
		at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:485)
		at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
		at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
		... 49 more
	Caused by: java.lang.NoClassDefFoundError: com/fasterxml/jackson/core/util/DefaultPrettyPrinter$Indenter
		at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
		at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
		at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
		at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:467)
		... 51 more
	Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1329)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
		... 55 more
02-Jun-2024 00:26:07.673 SEVERE [Catalina-utility-2] org.apache.catalina.core.StandardContext.loadOnStartup Servlet [spring] in web application [/HibernatePractice] threw load() exception
	java.lang.ClassNotFoundException: com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1329)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
		at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
		at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
		at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
		at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:467)
		at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
		at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:127)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:428)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:173)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
		at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
		at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
		at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
		at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
		at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
		at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
		at javax.servlet.GenericServlet.init(GenericServlet.java:143)
		at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1106)
		at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1063)
		at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:960)
		at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4641)
		at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4948)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.core.StandardContext.reload(StandardContext.java:3581)
		at org.apache.catalina.startup.HostConfig.reload(HostConfig.java:1415)
		at org.apache.catalina.startup.HostConfig.checkResources(HostConfig.java:1390)
		at org.apache.catalina.startup.HostConfig.check(HostConfig.java:1620)
		at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:308)
		at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
		at org.apache.catalina.core.ContainerBase.backgroundProcess(ContainerBase.java:1098)
		at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1301)
		at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.processChildren(ContainerBase.java:1305)
		at org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run(ContainerBase.java:1283)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
		at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
		at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:26:28.632 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:26:28.835 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:26:30.199 SEVERE [main] org.apache.catalina.core.ApplicationContext.log Servlet.init() for servlet [spring] threw exception
	org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter': Cannot create inner bean 'org.springframework.http.converter.json.MappingJackson2HttpMessageConverter#0' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] while setting bean property 'messageConverters' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.http.converter.json.MappingJackson2HttpMessageConverter#0': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] from ClassLoader [ParallelWebappClassLoader
  context: HibernatePractice
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@1f36e637
]
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:389)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:127)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:428)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:173)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
		at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
		at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
		at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
		at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
		at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
		at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
		at javax.servlet.GenericServlet.init(GenericServlet.java:143)
		at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1106)
		at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1063)
		at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:960)
		at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4641)
		at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4948)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
		at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
		at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
		at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:680)
		at org.apache.catalina.startup.HostConfig$DeployDescriptor.run(HostConfig.java:1844)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
		at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
		at org.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.java:575)
		at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:466)
		at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1584)
		at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)
		at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
		at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
		at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
		at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
		at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
		at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
		at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
		at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
		at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:925)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.startup.Catalina.start(Catalina.java:735)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
		at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:473)
	Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.http.converter.json.MappingJackson2HttpMessageConverter#0': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] from ClassLoader [ParallelWebappClassLoader
  context: HibernatePractice
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@1f36e637
]
		at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
		... 65 more
	Caused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] from ClassLoader [ParallelWebappClassLoader
  context: HibernatePractice
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@1f36e637
]
		at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:485)
		at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
		at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
		... 70 more
	Caused by: java.lang.NoClassDefFoundError: com/fasterxml/jackson/databind/exc/InvalidDefinitionException
		at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
		at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
		at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
		at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:467)
		... 72 more
	Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1329)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
		... 76 more
02-Jun-2024 00:26:30.199 SEVERE [main] org.apache.catalina.core.StandardContext.loadOnStartup Servlet [spring] in web application [/HibernatePractice] threw load() exception
	java.lang.ClassNotFoundException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1329)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
		at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
		at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
		at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
		at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:467)
		at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
		at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:127)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:428)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:173)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
		at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
		at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
		at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
		at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
		at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
		at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
		at javax.servlet.GenericServlet.init(GenericServlet.java:143)
		at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1106)
		at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1063)
		at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:960)
		at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:4641)
		at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4948)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:683)
		at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:658)
		at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:661)
		at org.apache.catalina.startup.HostConfig.deployDescriptor(HostConfig.java:680)
		at org.apache.catalina.startup.HostConfig$DeployDescriptor.run(HostConfig.java:1844)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
		at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:118)
		at org.apache.catalina.startup.HostConfig.deployDescriptors(HostConfig.java:575)
		at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:466)
		at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1584)
		at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:312)
		at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:114)
		at org.apache.catalina.util.LifecycleBase.setStateInternal(LifecycleBase.java:402)
		at org.apache.catalina.util.LifecycleBase.setState(LifecycleBase.java:345)
		at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:893)
		at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:794)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
		at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
		at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
		at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
		at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
		at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:248)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:925)
		at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
		at org.apache.catalina.startup.Catalina.start(Catalina.java:735)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:345)
		at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:473)
02-Jun-2024 00:26:37.728 INFO [http-nio-8087-exec-3] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:26:37.842 SEVERE [http-nio-8087-exec-3] org.apache.catalina.core.ApplicationContext.log Servlet.init() for servlet [spring] threw exception
	org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter': Cannot create inner bean 'org.springframework.http.converter.json.MappingJackson2HttpMessageConverter#0' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] while setting bean property 'messageConverters' with key [0]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.http.converter.json.MappingJackson2HttpMessageConverter#0': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] from ClassLoader [ParallelWebappClassLoader
  context: HibernatePractice
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@1f36e637
]
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:389)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:127)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:428)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:173)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
		at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
		at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
		at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
		at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
		at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
		at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
		at javax.servlet.GenericServlet.init(GenericServlet.java:143)
		at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1106)
		at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1063)
		at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:747)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:116)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
	Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.http.converter.json.MappingJackson2HttpMessageConverter#0': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] from ClassLoader [ParallelWebappClassLoader
  context: HibernatePractice
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@1f36e637
]
		at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:289)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
		... 41 more
	Caused by: java.lang.IllegalStateException: Failed to introspect Class [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] from ClassLoader [ParallelWebappClassLoader
  context: HibernatePractice
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@1f36e637
]
		at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:485)
		at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
		at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
		... 46 more
	Caused by: java.lang.NoClassDefFoundError: com/fasterxml/jackson/databind/exc/InvalidDefinitionException
		at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
		at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
		at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
		at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:467)
		... 48 more
	Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1329)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
		... 52 more
02-Jun-2024 00:26:37.842 SEVERE [http-nio-8087-exec-3] org.apache.catalina.core.StandardWrapperValve.invoke Allocate exception for servlet [spring]
	java.lang.ClassNotFoundException: com.fasterxml.jackson.databind.exc.InvalidDefinitionException
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1329)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1141)
		at java.base/java.lang.Class.getDeclaredMethods0(Native Method)
		at java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)
		at java.base/java.lang.Class.getDeclaredMethods(Class.java:2309)
		at org.springframework.util.ReflectionUtils.getDeclaredMethods(ReflectionUtils.java:467)
		at org.springframework.util.ReflectionUtils.doWithLocalMethods(ReflectionUtils.java:321)
		at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.determineCandidateConstructors(AutowiredAnnotationBeanPostProcessor.java:267)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineConstructorsFromBeanPostProcessors(AbstractAutowireCapableBeanFactory.java:1302)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1219)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBean(BeanDefinitionValueResolver.java:374)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:127)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveManagedList(BeanDefinitionValueResolver.java:428)
		at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:173)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
		at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
		at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
		at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
		at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
		at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
		at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
		at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
		at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
		at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:702)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:668)
		at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:716)
		at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:591)
		at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)
		at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:170)
		at javax.servlet.GenericServlet.init(GenericServlet.java:143)
		at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1106)
		at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1063)
		at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:747)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:116)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:26:56.085 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:26:56.315 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:27:39.387 SEVERE [http-nio-8087-exec-8] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.RestClientException: No HttpMessageConverter for com.nucleus.entity.PremiumEntity and content type "application/json"] with root cause
	org.springframework.web.client.RestClientException: No HttpMessageConverter for com.nucleus.entity.PremiumEntity and content type "application/json"
		at org.springframework.web.client.RestTemplate$HttpEntityRequestCallback.doWithRequest(RestTemplate.java:1000)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:774)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:30:34.029 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 00:30:44.740 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:30:45.019 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:31:14.023 SEVERE [http-nio-8087-exec-6] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:5000/predict": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
	java.net.ConnectException: Connection refused: connect
		at java.base/java.net.PlainSocketImpl.connect0(Native Method)
		at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
		at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
		at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
		at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
		at java.base/java.net.Socket.connect(Socket.java:609)
		at java.base/java.net.Socket.connect(Socket.java:558)
		at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)
		at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:509)
		at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:604)
		at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:277)
		at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:376)
		at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:397)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1253)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)
		at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
		at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
		at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:39:55.734 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 00:40:06.215 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:40:06.460 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 00:40:38.260 SEVERE [http-nio-8087-exec-2] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8085/predict": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
	java.net.ConnectException: Connection refused: connect
		at java.base/java.net.PlainSocketImpl.connect0(Native Method)
		at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
		at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
		at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
		at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
		at java.base/java.net.Socket.connect(Socket.java:609)
		at java.base/java.net.Socket.connect(Socket.java:558)
		at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)
		at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:509)
		at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:604)
		at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:277)
		at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:376)
		at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:397)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1253)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)
		at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
		at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
		at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 00:59:44.665 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 00:59:58.206 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 00:59:58.487 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 01:02:05.313 SEVERE [http-nio-8087-exec-8] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>NameError: name &#x27;model&#x27; is not defined // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 1759893256944,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "j3CiSlYJJLvRsZgUn4Lm";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>NameError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">NameError: name &#x27;model&#x27; is not defined</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-1759893256848"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256800"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256608"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256656"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256704"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256752"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256560"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">24</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>bloodSugarLevel = data[&#x27;bloodSugarLevel&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>bloodPressure = data[&#x27;bloodPressure&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span># Perform prediction using the loaded model</pre><EOL><pre class="line before"><span class="ws">    </span># Replace this with the actual prediction logic based on your model</pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                 </span>anyChronicDiseases, height, weight, knownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                 </span>historyOfCancerInFamily, numberOfMajorSurgeries,</pre><EOL><pre class="line after"><span class="ws">                                 </span>bloodSugarLevel, bloodPressure]])[0]</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>NameError: name &#x27;model&#x27; is not defined</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name &#x27;model&#x27; is not defined</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name 'model' is not defined<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>NameError: name &#x27;model&#x27; is not defined // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 1759893256944,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "j3CiSlYJJLvRsZgUn4Lm";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>NameError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">NameError: name &#x27;model&#x27; is not defined</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-1759893256848"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256800"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256608"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256656"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256704"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256752"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1759893256560"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">24</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>bloodSugarLevel = data[&#x27;bloodSugarLevel&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>bloodPressure = data[&#x27;bloodPressure&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span># Perform prediction using the loaded model</pre><EOL><pre class="line before"><span class="ws">    </span># Replace this with the actual prediction logic based on your model</pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                 </span>anyChronicDiseases, height, weight, knownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                 </span>historyOfCancerInFamily, numberOfMajorSurgeries,</pre><EOL><pre class="line after"><span class="ws">                                 </span>bloodSugarLevel, bloodPressure]])[0]</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>NameError: name &#x27;model&#x27; is not defined</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name &#x27;model&#x27; is not defined</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name 'model' is not defined<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 01:12:17.481 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 01:12:46.372 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 01:12:46.764 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 01:13:39.491 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>NameError: name &#x27;model&#x27; is not defined // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 1377382461104,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "sPQZyKvS0yNiNsFoq0dH";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>NameError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">NameError: name &#x27;model&#x27; is not defined</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-1377382461200"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377382461296"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377382461392"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377382461344"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377382461248"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383596096"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383596240"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">24</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>bloodSugarLevel = data[&#x27;bloodSugarLevel&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>bloodPressure = data[&#x27;bloodPressure&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span># Perform prediction using the loaded model</pre><EOL><pre class="line before"><span class="ws">    </span># Replace this with the actual prediction logic based on your model</pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                 </span>anyChronicDiseases, height, weight, knownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                 </span>historyOfCancerInFamily, numberOfMajorSurgeries,</pre><EOL><pre class="line after"><span class="ws">                                 </span>bloodSugarLevel, bloodPressure]])[0]</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>NameError: name &#x27;model&#x27; is not defined</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name &#x27;model&#x27; is not defined</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name 'model' is not defined<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>NameError: name &#x27;model&#x27; is not defined // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 1377382461104,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "sPQZyKvS0yNiNsFoq0dH";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>NameError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">NameError: name &#x27;model&#x27; is not defined</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-1377382461200"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377382461296"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377382461392"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377382461344"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377382461248"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383596096"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383596240"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">24</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>bloodSugarLevel = data[&#x27;bloodSugarLevel&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>bloodPressure = data[&#x27;bloodPressure&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span># Perform prediction using the loaded model</pre><EOL><pre class="line before"><span class="ws">    </span># Replace this with the actual prediction logic based on your model</pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                 </span>anyChronicDiseases, height, weight, knownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                 </span>historyOfCancerInFamily, numberOfMajorSurgeries,</pre><EOL><pre class="line after"><span class="ws">                                 </span>bloodSugarLevel, bloodPressure]])[0]</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>NameError: name &#x27;model&#x27; is not defined</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name &#x27;model&#x27; is not defined</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name 'model' is not defined<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 01:22:13.459 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 01:22:20.916 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 01:22:21.113 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 01:22:40.743 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>NameError: name &#x27;model&#x27; is not defined // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 1377383599456,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "sPQZyKvS0yNiNsFoq0dH";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>NameError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">NameError: name &#x27;model&#x27; is not defined</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-1377383599552"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599696"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599600"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599744"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599648"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599792"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599840"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">24</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>bloodSugarLevel = data[&#x27;bloodSugarLevel&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>bloodPressure = data[&#x27;bloodPressure&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span># Perform prediction using the loaded model</pre><EOL><pre class="line before"><span class="ws">    </span># Replace this with the actual prediction logic based on your model</pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                 </span>anyChronicDiseases, height, weight, knownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                 </span>historyOfCancerInFamily, numberOfMajorSurgeries,</pre><EOL><pre class="line after"><span class="ws">                                 </span>bloodSugarLevel, bloodPressure]])[0]</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>NameError: name &#x27;model&#x27; is not defined</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name &#x27;model&#x27; is not defined</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name 'model' is not defined<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>NameError: name &#x27;model&#x27; is not defined // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 1377383599456,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "sPQZyKvS0yNiNsFoq0dH";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>NameError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">NameError: name &#x27;model&#x27; is not defined</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-1377383599552"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599696"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599600"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599744"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599648"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599792"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1377383599840"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">24</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>bloodSugarLevel = data[&#x27;bloodSugarLevel&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>bloodPressure = data[&#x27;bloodPressure&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span># Perform prediction using the loaded model</pre><EOL><pre class="line before"><span class="ws">    </span># Replace this with the actual prediction logic based on your model</pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                 </span>anyChronicDiseases, height, weight, knownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                 </span>historyOfCancerInFamily, numberOfMajorSurgeries,</pre><EOL><pre class="line after"><span class="ws">                                 </span>bloodSugarLevel, bloodPressure]])[0]</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>NameError: name &#x27;model&#x27; is not defined</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name &#x27;model&#x27; is not defined</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 24, in predict<EOL>    prediction = model.predict([[age, diabetes, bloodPressureProblems, anyTransplants,<EOL>NameError: name 'model' is not defined<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 01:59:37.177 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:00:11.358 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:00:11.659 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:00:49.490 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8086/predict": Connection reset; nested exception is java.net.SocketException: Connection reset] with root cause
	java.net.SocketException: Connection reset
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
		at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
		at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
		at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
		at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:789)
		at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:724)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1615)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)
		at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
		at org.springframework.http.client.SimpleClientHttpResponse.getRawStatusCode(SimpleClientHttpResponse.java:55)
		at org.springframework.web.client.DefaultResponseErrorHandler.hasError(DefaultResponseErrorHandler.java:61)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:807)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:02:25.637 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:02:38.451 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:02:38.728 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:02:59.289 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntity]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:542)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:02:59.291 SEVERE [http-nio-8087-exec-7] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [48]

45:                 </div>
46:             </div>
47:             <div class="form-group row">
48:                 <form:label path="bloodPressure" class="col-sm-2 col-form-label">Blood Pressure Problems:</form:label>
49:                 <div class="col-sm-4">
50:                     <form:input path="bloodPressure" type="text" class="form-control" required="true"/>
51:                 </div>


Stacktrace:] with root cause
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntity]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:542)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:03:34.734 SEVERE [http-nio-8087-exec-8] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntity]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:537)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:03:34.735 SEVERE [http-nio-8087-exec-8] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [48]

45:                 </div>
46:             </div>
47:             <div class="form-group row">
48:                 <form:label path="bloodPressure" class="col-sm-2 col-form-label">Blood Pressure Problems:</form:label>
49:                 <div class="col-sm-4">
50:                     <form:input path="bloodPressure" type="text" class="form-control" required="true"/>
51:                 </div>


Stacktrace:] with root cause
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntity]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:537)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:03:37.956 SEVERE [http-nio-8087-exec-9] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntity]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:537)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:03:37.956 SEVERE [http-nio-8087-exec-9] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [48]

45:                 </div>
46:             </div>
47:             <div class="form-group row">
48:                 <form:label path="bloodPressure" class="col-sm-2 col-form-label">Blood Pressure Problems:</form:label>
49:                 <div class="col-sm-4">
50:                     <form:input path="bloodPressure" type="text" class="form-control" required="true"/>
51:                 </div>


Stacktrace:] with root cause
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntity]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:537)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:04:07.721 SEVERE [http-nio-8087-exec-10] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntity]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:557)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:04:07.721 SEVERE [http-nio-8087-exec-10] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [48]

45:                 </div>
46:             </div>
47:             <div class="form-group row">
48:                 <form:label path="bloodPressure" class="col-sm-2 col-form-label">Blood Pressure Problems:</form:label>
49:                 <div class="col-sm-4">
50:                     <form:input path="bloodPressure" type="text" class="form-control" required="true"/>
51:                 </div>


Stacktrace:] with root cause
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntity]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:557)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:04:26.371 SEVERE [http-nio-8087-exec-1] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntity]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:557)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:04:26.372 SEVERE [http-nio-8087-exec-1] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [48]

45:                 </div>
46:             </div>
47:             <div class="form-group row">
48:                 <form:label path="bloodPressure" class="col-sm-2 col-form-label">Blood Pressure Problems:</form:label>
49:                 <div class="col-sm-4">
50:                     <form:input path="bloodPressure" type="text" class="form-control" required="true"/>
51:                 </div>


Stacktrace:] with root cause
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntity]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:557)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:04:31.090 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:04:44.291 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:04:44.613 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:06:23.227 SEVERE [http-nio-8087-exec-10] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 1339772996768,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "KFTx9mjR1llEOd9rjMvv";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-1339773638832"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773639504"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773637152"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773640176"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773662400"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773662736"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773661392"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773680800"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773678112"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773678784"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773680464"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773678448"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773703024"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773704704"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 1339772996768,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "KFTx9mjR1llEOd9rjMvv";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-1339773638832"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773639504"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773637152"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773640176"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773662400"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773662736"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773661392"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773680800"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773678112"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773678784"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773680464"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773678448"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773703024"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773704704"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:06:23.227 SEVERE [http-nio-8087-exec-9] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 1339766169504,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "KFTx9mjR1llEOd9rjMvv";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-1339773640512"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773636816"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773661728"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773664752"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773663072"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773663408"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773665088"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773662064"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773679456"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773679120"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773679792"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773680128"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773681136"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773704032"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 1339766169504,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "KFTx9mjR1llEOd9rjMvv";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-1339773640512"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773636816"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773661728"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773664752"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773663072"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773663408"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773665088"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773662064"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773679456"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773679120"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773679792"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773680128"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773681136"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-1339773704032"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:06:46.570 SEVERE [http-nio-8087-exec-1] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788303002688,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788303039744"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303040080"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303040416"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303090496"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303091312"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303091648"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303091984"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303092320"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303090304"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303092848"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303093328"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303089968"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303092656"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303093664"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788303002688,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788303039744"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303040080"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303040416"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303090496"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303091312"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303091648"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303091984"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303092320"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303090304"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303092848"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303093328"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303089968"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303092656"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303093664"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:07:50.441 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:08:06.760 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:08:07.156 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:08:24.450 SEVERE [http-nio-8087-exec-5] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788303809120,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788303789648"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303789312"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303787968"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303789984"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303789024"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303788640"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303768832"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303769504"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303767488"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303768016"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303769168"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303768496"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303748352"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303749024"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788303809120,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788303789648"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303789312"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303787968"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303789984"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303789024"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303788640"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303768832"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303769504"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303767488"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303768016"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303769168"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303768496"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303748352"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303749024"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:09:55.700 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:11:01.320 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:11:01.544 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:11:27.481 SEVERE [http-nio-8087-exec-6] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788310436784,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788310436112"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310434672"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310437840"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310433856"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310435344"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310434480"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2787787803136"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2787787802896"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2787787802848"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303726384"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303727872"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303728208"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303703968"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2787787803232"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788310436784,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788310436112"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310434672"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310437840"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310433856"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310435344"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310434480"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2787787803136"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2787787802896"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2787787802848"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303726384"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303727872"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303728208"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303703968"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2787787803232"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:13:51.601 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:14:02.573 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:14:02.850 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:14:28.566 SEVERE [http-nio-8087-exec-9] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788314749344,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788314748912"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314748336"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314748768"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314748192"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314748576"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314748000"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314747808"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314747760"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314747424"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314747232"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314747184"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314750352"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314749776"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303703296"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788314749344,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788314748912"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314748336"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314748768"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314748192"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314748576"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314748000"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314747808"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314747760"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314747424"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314747232"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314747184"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314750352"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788314749776"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788303703296"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:15:12.408 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:15:24.483 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:15:24.711 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:15:44.114 SEVERE [http-nio-8087-exec-3] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788319033328,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788319034240"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033856"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319034192"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033424"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319034096"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033472"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033712"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033616"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033568"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033760"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310437168"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310436016"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033280"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310436880"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788319033328,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788319034240"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033856"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319034192"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033424"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319034096"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033472"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033712"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033616"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033568"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033760"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310437168"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310436016"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788319033280"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788310436880"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:16:25.690 SEVERE [http-nio-8087-exec-4] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788321109856,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788321110048"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110336"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110144"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110432"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110240"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110528"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110624"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110720"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110816"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110912"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321111008"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321111104"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321111200"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321111296"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788321109856,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788321110048"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110336"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110144"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110432"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110240"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110528"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110624"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110720"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110816"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321110912"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321111008"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321111104"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321111200"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788321111296"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:16:29.440 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:16:44.255 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:16:44.606 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:17:14.116 SEVERE [http-nio-8087-exec-3] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788329445216,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788329445408"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445696"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445504"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445792"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445600"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445888"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445984"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446080"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446176"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446272"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446368"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446464"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446560"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446656"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788329445216,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788329445408"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445696"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445504"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445792"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445600"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445888"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329445984"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446080"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446176"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446272"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446368"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446464"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446560"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329446656"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:57)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:23:02.450 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:23:12.627 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:23:12.865 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:23:26.748 SEVERE [http-nio-8087-exec-6] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntityDTO]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:538)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:23:26.748 SEVERE [http-nio-8087-exec-6] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [48]

45:                 </div>
46:             </div>
47:             <div class="form-group row">
48:                 <form:label path="bloodPressure" class="col-sm-2 col-form-label">Blood Pressure Problems:</form:label>
49:                 <div class="col-sm-4">
50:                     <form:input path="bloodPressure" type="text" class="form-control" required="true"/>
51:                 </div>


Stacktrace:] with root cause
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressure' of bean class [com.nucleus.entity.PremiumEntityDTO]: Bean property 'bloodPressure' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f2(predictPremiumDB_jsp.java:538)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:244)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:24:11.578 SEVERE [http-nio-8087-exec-9] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788333787264,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788333787456"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333787744"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333787552"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333787840"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333787648"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333787936"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333788320"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333788224"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333788032"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333788128"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329570160"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329570256"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329570016"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329570112"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"] with root cause
	org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 INTERNAL SERVER ERROR: "<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"<EOL>  "http://www.w3.org/TR/html4/loose.dtd"><EOL><html><EOL>  <head><EOL>    <title>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;). // Werkzeug Debugger</title><EOL>    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"<EOL>        type="text/css"><EOL>    <!-- We need to make sure this has a favicon so that the debugger does<EOL>         not accidentally trigger a request to /favicon.ico which might<EOL>         change the application's state. --><EOL>    <link rel="shortcut icon"<EOL>        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png"><EOL>    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script><EOL>    <script type="text/javascript"><EOL>      var TRACEBACK = 2788333787264,<EOL>          CONSOLE_MODE = false,<EOL>          EVALEX = true,<EOL>          EVALEX_TRUSTED = false,<EOL>          SECRET = "jAsC8EDfenskv9b4KGas";<EOL>    </script><EOL>  </head><EOL>  <body style="background-color: #fff"><EOL>    <div class="debugger"><EOL><h1>ValueError</h1><EOL><div class="detail"><EOL>  <p class="errormsg">ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</p><EOL></div><EOL><h2 class="traceback">Traceback <em>(most recent call last)</em></h2><EOL><div class="traceback"><EOL>  <h3></h3><EOL>  <ul><li><div class="frame" id="frame-2788333787456"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2091</em>,<EOL>      in <code class="function">__call__</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>def __call__(self, environ: dict, start_response: t.Callable) -&gt; t.Any:</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre><EOL><pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre><EOL><pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333787744"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2076</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line before"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line before"><span class="ws">                </span>error = e</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre><EOL><pre class="line after"><span class="ws">                </span>raise</pre><EOL><pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre><EOL><pre class="line after"><span class="ws">        </span>finally:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333787552"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">2073</em>,<EOL>      in <code class="function">wsgi_app</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre><EOL><pre class="line before"><span class="ws">        </span>error: t.Optional[BaseException] = None</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>try:</pre><EOL><pre class="line before"><span class="ws">                </span>ctx.push()</pre><EOL><pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre><EOL><pre class="line after"><span class="ws">            </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">                </span>error = e</pre><EOL><pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre><EOL><pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre><EOL><pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333787840"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1518</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line before"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre><EOL><pre class="line after"><span class="ws">        </span>self,</pre><EOL><pre class="line after"><span class="ws">        </span>rv: t.Union[ResponseReturnValue, HTTPException],</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333787648"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1516</em>,<EOL>      in <code class="function">full_dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre><EOL><pre class="line before"><span class="ws">        </span>try:</pre><EOL><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre><EOL><pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre><EOL><pre class="line before"><span class="ws">            </span>if rv is None:</pre><EOL><pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre><EOL><pre class="line after"><span class="ws">        </span>except Exception as e:</pre><EOL><pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre><EOL><pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333787936"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py"</cite>,<EOL>      line <em class="line">1502</em>,<EOL>      in <code class="function">dispatch_request</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre><EOL><pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre><EOL><pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre><EOL><pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre><EOL><pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre><EOL><pre class="line after"><span class="ws">        </span>error handling.</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333788320"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\Desktop\ML\ModelApi"</cite>,<EOL>      line <em class="line">32</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">    </span>HistoryOfCancerInFamily = data[&#x27;historyOfCancerInFamily&#x27;]</pre><EOL><pre class="line before"><span class="ws">    </span>NumberOfMajorSurgeries = data[&#x27;numberOfMajorSurgeries&#x27;]</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line current"><span class="ws">    </span>prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,</pre><EOL><pre class="line after"><span class="ws">                                    </span>AnyChronicDiseases, Height, Weight, KnownAllergies,</pre><EOL><pre class="line after"><span class="ws">                                    </span>HistoryOfCancerInFamily, NumberOfMajorSurgeries]])[0]</pre><EOL><pre class="line after"><span class="ws">    </span>print(&quot;Prediction successful:&quot;, prediction)</pre><EOL><pre class="line after"><span class="ws">    </span>return jsonify({&#x27;PremiumPrice&#x27;: prediction})</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333788224"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py"</cite>,<EOL>      line <em class="line">113</em>,<EOL>      in <code class="function">&lt;lambda&gt;</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span># this is to allow access to the docstrings.</pre><EOL><pre class="line before"><span class="ws">            </span>if not self.check(obj):</pre><EOL><pre class="line before"><span class="ws">                </span>raise attr_err</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">            </span># lambda, but not partial, allows help() to work with update_wrapper</pre><EOL><pre class="line current"><span class="ws">            </span>out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">            </span>def fn(*args, **kwargs):</pre><EOL><pre class="line after"><span class="ws">                </span>if not self.check(args[0]):</pre><EOL><pre class="line after"><span class="ws">                    </span>raise attr_err</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333788032"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py"</cite>,<EOL>      line <em class="line">470</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>Result of calling `predict` on the final estimator.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Xt = X</pre><EOL><pre class="line before"><span class="ws">        </span>for _, name, transform in self._iter(with_final=False):</pre><EOL><pre class="line before"><span class="ws">            </span>Xt = transform.transform(Xt)</pre><EOL><pre class="line current"><span class="ws">        </span>return self.steps[-1][1].predict(Xt, **predict_params)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@available_if(_final_estimator_has(&quot;fit_predict&quot;))</pre><EOL><pre class="line after"><span class="ws">    </span>def fit_predict(self, X, y=None, **fit_params):</pre><EOL><pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Transform the data, and apply `fit_predict` with the final estimator.</pre><EOL><pre class="line after"><span class="ws"></span> </pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788333788128"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">971</em>,<EOL>      in <code class="function">predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>y : ndarray of shape (n_samples,) or (n_samples, n_outputs)</pre><EOL><pre class="line before"><span class="ws">            </span>The predicted values.</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line before"><span class="ws">        </span># Check data</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_X_predict(X)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># Assign chunk of trees to jobs</pre><EOL><pre class="line after"><span class="ws">        </span>n_jobs, _, _ = _partition_estimators(self.n_estimators, self.n_jobs)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">        </span># avoid storing the output of every estimator by summing them here</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329570160"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py"</cite>,<EOL>      line <em class="line">579</em>,<EOL>      in <code class="function">_validate_X_predict</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">    </span>def _validate_X_predict(self, X):</pre><EOL><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>Validate X whenever one tries to predict, apply, predict_proba.&quot;&quot;&quot;</pre><EOL><pre class="line before"><span class="ws">        </span>check_is_fitted(self)</pre><EOL><pre class="line current"><span class="ws">        </span>X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)</pre><EOL><pre class="line after"><span class="ws">        </span>if issparse(X) and (X.indices.dtype != np.intc or X.indptr.dtype != np.intc):</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(&quot;No support for np.int64 index based sparse matrices&quot;)</pre><EOL><pre class="line after"><span class="ws">        </span>return X</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>@property</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329570256"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py"</cite>,<EOL>      line <em class="line">566</em>,<EOL>      in <code class="function">_validate_data</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">        </span>no_val_y = y is None or isinstance(y, str) and y == &quot;no_validation&quot;</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if no_val_X and no_val_y:</pre><EOL><pre class="line before"><span class="ws">            </span>raise ValueError(&quot;Validation should be done on X, y or both.&quot;)</pre><EOL><pre class="line before"><span class="ws">        </span>elif not no_val_X and no_val_y:</pre><EOL><pre class="line current"><span class="ws">            </span>X = check_array(X, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = X</pre><EOL><pre class="line after"><span class="ws">        </span>elif no_val_X and not no_val_y:</pre><EOL><pre class="line after"><span class="ws">            </span>y = _check_y(y, **check_params)</pre><EOL><pre class="line after"><span class="ws">            </span>out = y</pre><EOL><pre class="line after"><span class="ws">        </span>else:</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329570016"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">800</em>,<EOL>      in <code class="function">check_array</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">                </span>&quot;Found array with dim %d. %s expected &lt;= 2.&quot;</pre><EOL><pre class="line before"><span class="ws">                </span>% (array.ndim, estimator_name)</pre><EOL><pre class="line before"><span class="ws">            </span>)</pre><EOL><pre class="line before"><span class="ws"></span> </pre><EOL><pre class="line before"><span class="ws">        </span>if force_all_finite:</pre><EOL><pre class="line current"><span class="ws">            </span>_assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)</pre><EOL><pre class="line after"><span class="ws"></span> </pre><EOL><pre class="line after"><span class="ws">    </span>if ensure_min_samples &gt; 0:</pre><EOL><pre class="line after"><span class="ws">        </span>n_samples = _num_samples(array)</pre><EOL><pre class="line after"><span class="ws">        </span>if n_samples &lt; ensure_min_samples:</pre><EOL><pre class="line after"><span class="ws">            </span>raise ValueError(</pre></div><EOL></div><EOL><EOL><li><div class="frame" id="frame-2788329570112"><EOL>  <h4>File <cite class="filename">"C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py"</cite>,<EOL>      line <em class="line">114</em>,<EOL>      in <code class="function">_assert_all_finite</code></h4><EOL>  <div class="source "><pre class="line before"><span class="ws">            </span>and np.isinf(X).any()</pre><EOL><pre class="line before"><span class="ws">            </span>or not allow_nan</pre><EOL><pre class="line before"><span class="ws">            </span>and not np.isfinite(X).all()</pre><EOL><pre class="line before"><span class="ws">        </span>):</pre><EOL><pre class="line before"><span class="ws">            </span>type_err = &quot;infinity&quot; if allow_nan else &quot;NaN, infinity&quot;</pre><EOL><pre class="line current"><span class="ws">            </span>raise ValueError(</pre><EOL><pre class="line after"><span class="ws">                </span>msg_err.format(</pre><EOL><pre class="line after"><span class="ws">                    </span>type_err, msg_dtype if msg_dtype is not None else X.dtype</pre><EOL><pre class="line after"><span class="ws">                </span>)</pre><EOL><pre class="line after"><span class="ws">            </span>)</pre><EOL><pre class="line after"><span class="ws">    </span># for object dtype data, we only check for NaNs (GH-13254)</pre></div><EOL></div><EOL></ul><EOL>  <blockquote>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</blockquote><EOL></div><EOL><EOL><div class="plain"><EOL>    <p><EOL>      This is the Copy/Paste friendly version of the traceback.<EOL>    </p><EOL>    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py&quot;, line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File &quot;C:\Users\yash shukla\Desktop\ML\ModelApi&quot;, line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py&quot;, line 113, in &lt;lambda&gt;<EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py&quot;, line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py&quot;, line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse=&quot;csr&quot;, reset=False)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py&quot;, line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == &quot;allow-nan&quot;)<EOL>  File &quot;C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py&quot;, line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype(&#x27;float32&#x27;).</textarea><EOL></div><EOL><div class="explanation"><EOL>  The debugger caught an exception in your WSGI application.  You can now<EOL>  look at the traceback which led to the error.  <span class="nojavascript"><EOL>  If you enable JavaScript you can also use additional features such as code<EOL>  execution (if the evalex feature is enabled), automatic pasting of the<EOL>  exceptions and much more.</span><EOL></div><EOL>      <div class="footer"><EOL>        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your<EOL>        friendly Werkzeug powered traceback interpreter.<EOL>      </div><EOL>    </div><EOL><EOL>    <div class="pin-prompt"><EOL>      <div class="inner"><EOL>        <h3>Console Locked</h3><EOL>        <p><EOL>          The console is locked and needs to be unlocked by entering the PIN.<EOL>          You can find the PIN printed out on the standard output of your<EOL>          shell that runs the server.<EOL>        <form><EOL>          <p>PIN:<EOL>            <input type=text name=pin size=14><EOL>            <input type=submit name=btn value="Confirm Pin"><EOL>        </form><EOL>      </div><EOL>    </div><EOL>  </body><EOL></html><EOL><EOL><!--<EOL><EOL>Traceback (most recent call last):<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2091, in __call__<EOL>    return self.wsgi_app(environ, start_response)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2076, in wsgi_app<EOL>    response = self.handle_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 2073, in wsgi_app<EOL>    response = self.full_dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1518, in full_dispatch_request<EOL>    rv = self.handle_user_exception(e)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1516, in full_dispatch_request<EOL>    rv = self.dispatch_request()<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\flask\app.py", line 1502, in dispatch_request<EOL>    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)<EOL>  File "C:\Users\yash shukla\Desktop\ML\ModelApi", line 32, in predict<EOL>    prediction = model.predict([[Age, Diabetes, BloodPressureProblems, AnyTransplants,<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\metaestimators.py", line 113, in <lambda><EOL>    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)  # noqa<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\pipeline.py", line 470, in predict<EOL>    return self.steps[-1][1].predict(Xt, **predict_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 971, in predict<EOL>    X = self._validate_X_predict(X)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\ensemble\_forest.py", line 579, in _validate_X_predict<EOL>    X = self._validate_data(X, dtype=DTYPE, accept_sparse="csr", reset=False)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\base.py", line 566, in _validate_data<EOL>    X = check_array(X, **check_params)<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 800, in check_array<EOL>    _assert_all_finite(array, allow_nan=force_all_finite == "allow-nan")<EOL>  File "C:\Users\yash shukla\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\sklearn\utils\validation.py", line 114, in _assert_all_finite<EOL>    raise ValueError(<EOL>ValueError: Input contains NaN, infinity or a value too large for dtype('float32').<EOL><EOL>--><EOL>"
		at org.springframework.web.client.HttpServerErrorException.create(HttpServerErrorException.java:100)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:170)
		at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
		at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:58)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:33:13.871 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:33:14.167 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:33:29.905 SEVERE [http-nio-8087-exec-8] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressureProblems ' of bean class [com.nucleus.entity.PremiumEntityDTO]: Bean property 'bloodPressureProblems ' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:164)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.autogenerateId(AbstractDataBoundFormElementTag.java:149)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.resolveId(AbstractDataBoundFormElementTag.java:139)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:122)
		at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:460)
		at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:357)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005finput_005f9(predictPremiumDB_jsp.java:1158)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:326)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:33:29.906 SEVERE [http-nio-8087-exec-8] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [85]

82:             </div>
83:             <form:label path="bloodPressureProblems" class="col-sm-2 col-form-label">BloodPressureProblems :</form:label>
84:                             <div class="col-sm-4">
85:                                 <form:input path="bloodPressureProblems " type="number" class="form-control" required="true"/>
86:                             </div>
87: 
88: 


Stacktrace:] with root cause
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressureProblems ' of bean class [com.nucleus.entity.PremiumEntityDTO]: Bean property 'bloodPressureProblems ' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:164)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.autogenerateId(AbstractDataBoundFormElementTag.java:149)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.resolveId(AbstractDataBoundFormElementTag.java:139)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:122)
		at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:460)
		at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:357)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005finput_005f9(predictPremiumDB_jsp.java:1158)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:326)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:37:46.416 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:38:04.894 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:38:05.138 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:38:28.579 SEVERE [http-nio-8087-exec-1] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressureProblems ' of bean class [com.nucleus.entity.PremiumEntityDTO]: Bean property 'bloodPressureProblems ' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:164)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.autogenerateId(AbstractDataBoundFormElementTag.java:149)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.resolveId(AbstractDataBoundFormElementTag.java:139)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:122)
		at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:460)
		at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:357)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005finput_005f9(predictPremiumDB_jsp.java:1158)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:326)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:38:28.580 SEVERE [http-nio-8087-exec-1] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [85]

82:             </div>
83:             <form:label path="bloodPressureProblems" class="col-sm-2 col-form-label">BloodPressureProblems :</form:label>
84:                             <div class="col-sm-4">
85:                                 <form:input path="bloodPressureProblems " type="number" class="form-control" required="true"/>
86:                             </div>
87: 
88: 


Stacktrace:] with root cause
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressureProblems ' of bean class [com.nucleus.entity.PremiumEntityDTO]: Bean property 'bloodPressureProblems ' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:164)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.autogenerateId(AbstractDataBoundFormElementTag.java:149)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.resolveId(AbstractDataBoundFormElementTag.java:139)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:122)
		at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:460)
		at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:357)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005finput_005f9(predictPremiumDB_jsp.java:1158)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:326)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:39:41.890 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:39:58.464 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:39:58.659 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:40:50.023 SEVERE [http-nio-8087-exec-3] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntityDTO' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:373)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:40:50.024 SEVERE [http-nio-8087-exec-3] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [38]

35:         <h2 class="mb-4">Add Health Information</h2>
36:         <form:form action="addAndPredict" modelAttribute="PremiumEntityDTO" >
37:             <div class="form-group row">
38:                 <form:label path="age" class="col-sm-2 col-form-label">Age:</form:label>
39:                 <div class="col-sm-4">
40:                     <form:input path="age" type="number" class="form-control" required="true"/>
41:                 </div>


Stacktrace:] with root cause
	java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'PremiumEntityDTO' available as request attribute
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.LabelTag.autogenerateFor(LabelTag.java:271)
		at org.springframework.web.servlet.tags.form.LabelTag.resolveFor(LabelTag.java:261)
		at org.springframework.web.servlet.tags.form.LabelTag.writeTagContent(LabelTag.java:230)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005flabel_005f0(predictPremiumDB_jsp.java:373)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:222)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:41:22.105 SEVERE [http-nio-8087-exec-4] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressureProblems ' of bean class [com.nucleus.entity.PremiumEntityDTO]: Bean property 'bloodPressureProblems ' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:164)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.autogenerateId(AbstractDataBoundFormElementTag.java:149)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.resolveId(AbstractDataBoundFormElementTag.java:139)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:122)
		at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:460)
		at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:357)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005finput_005f9(predictPremiumDB_jsp.java:1158)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:326)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:41:22.105 SEVERE [http-nio-8087-exec-4] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/predictPremiumDB.jsp] at line [85]

82:             </div>
83:             <form:label path="bloodPressureProblems" class="col-sm-2 col-form-label">BloodPressureProblems :</form:label>
84:                             <div class="col-sm-4">
85:                                 <form:input path="bloodPressureProblems " type="number" class="form-control" required="true"/>
86:                             </div>
87: 
88: 


Stacktrace:] with root cause
	org.springframework.beans.NotReadablePropertyException: Invalid property 'bloodPressureProblems ' of bean class [com.nucleus.entity.PremiumEntityDTO]: Bean property 'bloodPressureProblems ' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:627)
		at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:617)
		at org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:104)
		at org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:228)
		at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:129)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:178)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getPropertyPath(AbstractDataBoundFormElementTag.java:199)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getName(AbstractDataBoundFormElementTag.java:164)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.autogenerateId(AbstractDataBoundFormElementTag.java:149)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.resolveId(AbstractDataBoundFormElementTag.java:139)
		at org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.writeDefaultAttributes(AbstractDataBoundFormElementTag.java:122)
		at org.springframework.web.servlet.tags.form.AbstractHtmlElementTag.writeDefaultAttributes(AbstractHtmlElementTag.java:460)
		at org.springframework.web.servlet.tags.form.InputTag.writeTagContent(InputTag.java:357)
		at org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:87)
		at org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:83)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005finput_005f9(predictPremiumDB_jsp.java:1158)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspx_meth_form_005fform_005f0(predictPremiumDB_jsp.java:326)
		at org.apache.jsp.WEB_002dINF.views.predictPremiumDB_jsp._jspService(predictPremiumDB_jsp.java:170)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:44:44.406 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 02:44:53.857 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 02:44:54.088 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 02:45:24.750 SEVERE [http-nio-8087-exec-9] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8086/predict": Connection reset; nested exception is java.net.SocketException: Connection reset] with root cause
	java.net.SocketException: Connection reset
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
		at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
		at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
		at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
		at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:789)
		at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:724)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1615)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)
		at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
		at org.springframework.http.client.SimpleClientHttpResponse.getRawStatusCode(SimpleClientHttpResponse.java:55)
		at org.springframework.web.client.DefaultResponseErrorHandler.hasError(DefaultResponseErrorHandler.java:61)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:807)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:58)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 02:46:22.050 SEVERE [http-nio-8087-exec-2] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8086/predict": Connection reset; nested exception is java.net.SocketException: Connection reset] with root cause
	java.net.SocketException: Connection reset
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
		at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
		at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
		at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
		at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:789)
		at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:724)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1615)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)
		at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
		at org.springframework.http.client.SimpleClientHttpResponse.getRawStatusCode(SimpleClientHttpResponse.java:55)
		at org.springframework.web.client.DefaultResponseErrorHandler.hasError(DefaultResponseErrorHandler.java:61)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:807)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:58)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 08:57:41.445 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 08:57:41.632 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 08:58:23.270 SEVERE [http-nio-8087-exec-10] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://localhost:8086/predict": Connection reset; nested exception is java.net.SocketException: Connection reset] with root cause
	java.net.SocketException: Connection reset
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
		at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
		at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
		at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
		at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:789)
		at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:724)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1615)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)
		at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
		at org.springframework.http.client.SimpleClientHttpResponse.getRawStatusCode(SimpleClientHttpResponse.java:55)
		at org.springframework.web.client.DefaultResponseErrorHandler.hasError(DefaultResponseErrorHandler.java:61)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:807)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:58)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 09:12:18.673 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 09:12:19.044 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 09:16:00.468 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 09:16:36.552 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 09:16:37.371 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 09:40:50.066 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 09:41:03.182 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 09:41:03.386 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 09:41:24.897 SEVERE [http-nio-8087-exec-6] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.RestClientException: Error while extracting response for type [class com.nucleus.entity.PremiumDTO] and content type [application/json]; nested exception is org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.nucleus.entity.PremiumDTO` (although at least one Creator exists): cannot deserialize from Object value (no delegate- or property-based Creator); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.nucleus.entity.PremiumDTO` (although at least one Creator exists): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 2, column: 3]] with root cause
	com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.nucleus.entity.PremiumDTO` (although at least one Creator exists): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 2, column: 3]
		at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
		at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1754)
		at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1379)
		at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1508)
		at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:348)
		at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
		at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
		at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4899)
		at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3899)
		at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
		at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
		at org.springframework.web.client.HttpMessageConverterExtractor.extractData(HttpMessageConverterExtractor.java:105)
		at org.springframework.web.client.RestTemplate$ResponseEntityResponseExtractor.extractData(RestTemplate.java:1037)
		at org.springframework.web.client.RestTemplate$ResponseEntityResponseExtractor.extractData(RestTemplate.java:1020)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:778)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:60)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 09:44:59.341 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 09:45:09.729 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 09:45:09.964 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 09:45:31.820 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 09:45:42.674 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 09:45:42.920 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 09:47:47.342 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 09:47:58.657 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 09:47:58.849 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 09:50:27.121 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 09:50:36.693 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 09:50:36.879 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 09:56:10.244 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 09:56:20.732 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 09:56:20.918 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 10:00:10.471 SEVERE [http-nio-8087-exec-9] org.apache.catalina.core.ApplicationDispatcher.invoke Servlet.service() for servlet [jsp] threw exception
	javax.el.ELException: Cannot convert [{PremiumPrice=24930.0}] of type [class java.util.LinkedHashMap] to [class java.lang.Long]
		at org.apache.el.lang.ELSupport.coerceToNumber(ELSupport.java:385)
		at org.apache.el.lang.ELSupport.equals(ELSupport.java:167)
		at org.apache.el.lang.ELSupport.compare(ELSupport.java:94)
		at org.apache.el.parser.AstGreaterThan.getValue(AstGreaterThan.java:44)
		at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:189)
		at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:690)
		at org.apache.jsp.WEB_002dINF.views.Prediction_jsp._jspx_meth_c_005fwhen_005f1(Prediction_jsp.java:317)
		at org.apache.jsp.WEB_002dINF.views.Prediction_jsp._jspx_meth_c_005fchoose_005f1(Prediction_jsp.java:282)
		at org.apache.jsp.WEB_002dINF.views.Prediction_jsp._jspx_meth_c_005fwhen_005f0(Prediction_jsp.java:246)
		at org.apache.jsp.WEB_002dINF.views.Prediction_jsp._jspx_meth_c_005fchoose_005f0(Prediction_jsp.java:201)
		at org.apache.jsp.WEB_002dINF.views.Prediction_jsp._jspService(Prediction_jsp.java:160)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 10:00:10.472 SEVERE [http-nio-8087-exec-9] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [An exception occurred processing [/WEB-INF/views/Prediction.jsp] at line [33]

30:             <div class="result">
31:                 <p>The predicted premium price is: ${predictedPremiumPrice}</p>
32:                 <c:choose>
33:                     <c:when test="${predictedPremiumPrice > 20000}">
34:                         <p class="high">The amount is high.</p>
35:                     </c:when>
36:                     <c:otherwise>


Stacktrace:] with root cause
	javax.el.ELException: Cannot convert [{PremiumPrice=24930.0}] of type [class java.util.LinkedHashMap] to [class java.lang.Long]
		at org.apache.el.lang.ELSupport.coerceToNumber(ELSupport.java:385)
		at org.apache.el.lang.ELSupport.equals(ELSupport.java:167)
		at org.apache.el.lang.ELSupport.compare(ELSupport.java:94)
		at org.apache.el.parser.AstGreaterThan.getValue(AstGreaterThan.java:44)
		at org.apache.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:189)
		at org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(PageContextImpl.java:690)
		at org.apache.jsp.WEB_002dINF.views.Prediction_jsp._jspx_meth_c_005fwhen_005f1(Prediction_jsp.java:317)
		at org.apache.jsp.WEB_002dINF.views.Prediction_jsp._jspx_meth_c_005fchoose_005f1(Prediction_jsp.java:282)
		at org.apache.jsp.WEB_002dINF.views.Prediction_jsp._jspx_meth_c_005fwhen_005f0(Prediction_jsp.java:246)
		at org.apache.jsp.WEB_002dINF.views.Prediction_jsp._jspx_meth_c_005fchoose_005f0(Prediction_jsp.java:201)
		at org.apache.jsp.WEB_002dINF.views.Prediction_jsp._jspService(Prediction_jsp.java:160)
		at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:466)
		at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:379)
		at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:327)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:661)
		at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:425)
		at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:357)
		at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:294)
		at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:171)
		at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:316)
		at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1401)
		at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 10:01:40.225 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 10:01:50.142 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 10:01:50.352 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 10:01:59.296 SEVERE [http-nio-8087-exec-1] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:8086/predict": Connection reset; nested exception is java.net.SocketException: Connection reset] with root cause
	java.net.SocketException: Connection reset
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
		at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
		at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
		at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
		at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:789)
		at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:724)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1615)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)
		at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
		at org.springframework.http.client.SimpleClientHttpResponse.getRawStatusCode(SimpleClientHttpResponse.java:55)
		at org.springframework.web.client.DefaultResponseErrorHandler.hasError(DefaultResponseErrorHandler.java:61)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:807)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:59)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 10:02:13.984 SEVERE [http-nio-8087-exec-3] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:8086/predict": Connection reset; nested exception is java.net.SocketException: Connection reset] with root cause
	java.net.SocketException: Connection reset
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
		at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
		at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
		at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
		at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:789)
		at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:724)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1615)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)
		at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
		at org.springframework.http.client.SimpleClientHttpResponse.getRawStatusCode(SimpleClientHttpResponse.java:55)
		at org.springframework.web.client.DefaultResponseErrorHandler.hasError(DefaultResponseErrorHandler.java:61)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:807)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:59)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 10:03:01.866 SEVERE [http-nio-8087-exec-5] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:8086/predict": Connection reset; nested exception is java.net.SocketException: Connection reset] with root cause
	java.net.SocketException: Connection reset
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
		at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
		at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
		at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
		at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:789)
		at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:724)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1615)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)
		at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
		at org.springframework.http.client.SimpleClientHttpResponse.getRawStatusCode(SimpleClientHttpResponse.java:55)
		at org.springframework.web.client.DefaultResponseErrorHandler.hasError(DefaultResponseErrorHandler.java:61)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:807)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:59)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 10:04:51.998 SEVERE [http-nio-8087-exec-6] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:8086/predict": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
	java.net.ConnectException: Connection refused: connect
		at java.base/java.net.PlainSocketImpl.connect0(Native Method)
		at java.base/java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:101)
		at java.base/java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:412)
		at java.base/java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:255)
		at java.base/java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:237)
		at java.base/java.net.Socket.connect(Socket.java:609)
		at java.base/java.net.Socket.connect(Socket.java:558)
		at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:182)
		at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:509)
		at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:604)
		at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:277)
		at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:376)
		at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:397)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1253)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1187)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1081)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1015)
		at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
		at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
		at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:59)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 10:14:37.356 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 10:14:45.382 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 10:14:45.601 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 10:58:18.325 INFO [Thread-1] org.apache.catalina.core.ApplicationContext.log Destroying Spring FrameworkServlet 'spring'
02-Jun-2024 10:59:25.191 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 10:59:25.577 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 12:11:34.848 INFO [main] org.apache.catalina.core.ApplicationContext.log No Spring WebApplicationInitializer types detected on classpath
02-Jun-2024 12:11:35.146 INFO [main] org.apache.catalina.core.ApplicationContext.log Initializing Spring DispatcherServlet 'spring'
02-Jun-2024 12:12:10.685 SEVERE [http-nio-8087-exec-1] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:8086/predict": Connection reset; nested exception is java.net.SocketException: Connection reset] with root cause
	java.net.SocketException: Connection reset
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
		at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
		at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
		at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
		at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:789)
		at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:724)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1615)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)
		at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
		at org.springframework.http.client.SimpleClientHttpResponse.getRawStatusCode(SimpleClientHttpResponse.java:55)
		at org.springframework.web.client.DefaultResponseErrorHandler.hasError(DefaultResponseErrorHandler.java:61)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:807)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:59)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 12:12:50.361 SEVERE [http-nio-8087-exec-2] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:8086/predict": Connection reset; nested exception is java.net.SocketException: Connection reset] with root cause
	java.net.SocketException: Connection reset
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
		at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
		at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
		at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
		at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:789)
		at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:724)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1615)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)
		at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
		at org.springframework.http.client.SimpleClientHttpResponse.getRawStatusCode(SimpleClientHttpResponse.java:55)
		at org.springframework.web.client.DefaultResponseErrorHandler.hasError(DefaultResponseErrorHandler.java:61)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:807)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:59)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
02-Jun-2024 12:13:16.277 SEVERE [http-nio-8087-exec-5] org.apache.catalina.core.StandardWrapperValve.invoke Servlet.service() for servlet [spring] in context with path [/HibernatePractice] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://127.0.0.1:8086/predict": Connection reset; nested exception is java.net.SocketException: Connection reset] with root cause
	java.net.SocketException: Connection reset
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:186)
		at java.base/java.net.SocketInputStream.read(SocketInputStream.java:140)
		at java.base/java.io.BufferedInputStream.fill(BufferedInputStream.java:252)
		at java.base/java.io.BufferedInputStream.read1(BufferedInputStream.java:292)
		at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
		at java.base/sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:789)
		at java.base/sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:724)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1615)
		at java.base/sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1520)
		at java.base/java.net.HttpURLConnection.getResponseCode(HttpURLConnection.java:527)
		at org.springframework.http.client.SimpleClientHttpResponse.getRawStatusCode(SimpleClientHttpResponse.java:55)
		at org.springframework.web.client.DefaultResponseErrorHandler.hasError(DefaultResponseErrorHandler.java:61)
		at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:807)
		at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
		at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
		at org.springframework.web.client.RestTemplate.postForEntity(RestTemplate.java:468)
		at com.nucleus.controller.ControllerUser.addAndPredict(ControllerUser.java:59)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:566)
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
		at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
		at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:210)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:179)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:154)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1786)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
		at java.base/java.lang.Thread.run(Thread.java:829)
